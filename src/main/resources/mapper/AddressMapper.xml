<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.kgc.easybuy.dao.AddressMapper">
    <select id="getDefaultAdd" resultType="Address">
        select  a.userId, a.address, a.createTime, a.isDefault, a.remark,u.userName,u.email,u.mobile
        from  easybuy_user_address a ,easybuy_user u where a.userId =u.id and a.isDefault=1 and a.isDel=0 and u.id=#{id}
    </select>

    <select id="getAddressById" resultType="Address">
        select id,
            userId,
            address,
            createTime,
            isDefault,
            remark,
            isDel,
            phone,
            recipient
        from easybuy_user_address
        <where>
            userId = #{userId} and isDel = 0
        order by createTime desc
        </where>
    </select>

    <update id="setDefaultTwo">
        update easybuy_user_address set isDefault = 1 where userId = #{userId} and id = #{id} and isDel = 0
    </update>

    <update id="setDefaultOne">
        update easybuy_user_address set isDefault = 0 where userId = #{userId} and isDel = 0
    </update>

    <insert id="addAddress" parameterType="Address" keyProperty="id" useGeneratedKeys="true">
        insert into easybuy_user_address(userId,address,createTime,remark,phone,recipient)
        values (#{userId},#{address},now(),#{remark},#{phone},#{recipient})
    </insert>

    <select id="getAddressByIdAndUserId" resultType="Address">
        select id,
        userId,
        address,
        createTime,
        isDefault,
        remark,
        isDel,
        phone,
        recipient
        from easybuy_user_address
        <where>
            id = #{id} and  userId = #{userId} and isDel = 0
            order by createTime desc
        </where>
    </select>

    <update id="updateAddress" parameterType="Address" keyProperty="id" useGeneratedKeys="true">
        update  easybuy_user_address
        <set>
            <if test="address != null and address != ''">
                address = #{address},
            </if>
            <if test="phone != null and phone != ''">
                phone = #{phone},
            </if>
            <if test="recipient != null and recipient != ''">
                recipient = #{recipient},
            </if>
            remark = #{remark},isDefault=#{isDefault}
        </set>
        where id = #{id}
    </update>

    <update id="deleteAddress">
    update  easybuy_user_address set isDel = 1 where id = #{id}
    </update>
</mapper>